["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-format/src/formatDecimal.js"],"~:js","shadow$provide.module$node_modules$d3_format$src$formatDecimal=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(x){return 1E21<=Math.abs(x=Math.round(x))?x.toLocaleString(\"en\").replace(/,/g,\"\"):x.toString(10)};exports.formatDecimalParts=function(x,p){if(0>(p=(x=p?x.toExponential(p-1):x.toExponential()).indexOf(\"e\")))return null;var coefficient=x.slice(0,p);return[1<coefficient.length?coefficient[0]+coefficient.slice(2):coefficient,\n+x.slice(p+1)]}}","~:source","shadow$provide[\"module$node_modules$d3_format$src$formatDecimal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.formatDecimalParts = formatDecimalParts;\n\nfunction _default(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n} // Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\n\n\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, Â±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","formatDecimalParts","default"]],"~:compiled-at",1653857611289,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_format$src$formatDecimal.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAGAC,QAAiB,CAACC,CAAD,CAAI,CACnB,MAAsC,KAA/B,EAAAC,IAAKC,CAAAA,GAAL,CAASF,CAAT,CAAaC,IAAKE,CAAAA,KAAL,CAAWH,CAAX,CAAb,CAAA,CAAsCA,CAAEI,CAAAA,cAAF,CAAiB,IAAjB,CAAuBC,CAAAA,OAAvB,CAA+B,IAA/B,CAAqC,EAArC,CAAtC,CAAiFL,CAAEM,CAAAA,QAAF,CAAW,EAAX,CADrE,CAFrBZ,QAAQa,CAAAA,kBAAR,CASAA,QAA2B,CAACP,CAAD,CAAIQ,CAAJ,CAAO,CAChC,GAA8E,CAA9E,EAAKC,CAAL,CAA8DC,CAApDV,CAAoDU,CAAhDF,CAAA,CAAIR,CAAEW,CAAAA,aAAF,CAAgBH,CAAhB,CAAoB,CAApB,CAAJ,CAA6BR,CAAEW,CAAAA,aAAF,EAAmBD,EAAAA,OAArD,CAA6D,GAA7D,CAAT,EAAiF,MAAO,KAExF,KACIE,YAAcZ,CAAEa,CAAAA,KAAF,CAAQ,CAAR,CAAWJ,CAAX,CAGlB,OAAO,CAAsB,CAArB,CAAAG,WAAYE,CAAAA,MAAZ,CAAyBF,WAAA,CAAY,CAAZ,CAAzB,CAA0CA,WAAYC,CAAAA,KAAZ,CAAkB,CAAlB,CAA1C,CAAiED,WAAlE;AAA+E,CAACZ,CAAEa,CAAAA,KAAF,CAAQJ,CAAR,CAAY,CAAZ,CAAhF,CAPyB,CAhB0E;\",\n\"sources\":[\"node_modules/d3-format/src/formatDecimal.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_format$src$formatDecimal\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = _default;\\nexports.formatDecimalParts = formatDecimalParts;\\n\\nfunction _default(x) {\\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\\\"en\\\").replace(/,/g, \\\"\\\") : x.toString(10);\\n} // Computes the decimal coefficient and exponent of the specified number x with\\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\\n// For example, formatDecimalParts(1.23) returns [\\\"123\\\", 0].\\n\\n\\nfunction formatDecimalParts(x, p) {\\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\\\"e\\\")) < 0) return null; // NaN, \\u00b1Infinity\\n\\n  var i,\\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\\\d\\\\.\\\\d+e[-+]\\\\d+\\n  // (e.g., 1.2e+3) or the form \\\\de[-+]\\\\d+ (e.g., 1e+3).\\n\\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_default\",\"x\",\"Math\",\"abs\",\"round\",\"toLocaleString\",\"replace\",\"toString\",\"formatDecimalParts\",\"p\",\"i\",\"indexOf\",\"toExponential\",\"coefficient\",\"slice\",\"length\"]\n}\n"]