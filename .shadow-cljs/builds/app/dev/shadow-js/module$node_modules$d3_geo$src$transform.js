["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-geo/src/transform.js"],"~:js","shadow$provide.module$node_modules$d3_geo$src$transform=function(global,require,module,exports){function transformer(methods){return function(stream){var s=new TransformStream,key;for(key in methods)s[key]=methods[key];s.stream=stream;return s}}function TransformStream(){}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(methods){return{stream:transformer(methods)}};exports.transformer=transformer;TransformStream.prototype={constructor:TransformStream,point:function(x,\ny){this.stream.point(x,y)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}}}","~:source","shadow$provide[\"module$node_modules$d3_geo$src$transform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.transformer = transformer;\n\nfunction _default(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) s[key] = methods[key];\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function (x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function () {\n    this.stream.sphere();\n  },\n  lineStart: function () {\n    this.stream.lineStart();\n  },\n  lineEnd: function () {\n    this.stream.lineEnd();\n  },\n  polygonStart: function () {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function () {\n    this.stream.polygonEnd();\n  }\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["stream","polygonStart","prototype","__esModule","value","lineEnd","transformer","lineStart","polygonEnd","sphere","default","point","constructor"]],"~:compiled-at",1653857611314,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_geo$src$transform.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAerGC,QAASA,YAAW,CAACC,OAAD,CAAU,CAC5B,MAAO,SAAS,CAACC,MAAD,CAAS,CACvB,IAAIC,EAAI,IAAIC,eAAZ,CAESC,GAAT,KAASA,GAAT,GAAgBJ,QAAhB,CAAyBE,CAAA,CAAEE,GAAF,CAAA,CAASJ,OAAA,CAAQI,GAAR,CAElCF,EAAED,CAAAA,MAAF,CAAWA,MACX,OAAOC,EANgB,CADG,CAW9BC,QAASA,gBAAe,EAAG,EAvB3BE,MAAOC,CAAAA,cAAP,CAAsBR,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,QAAQU,CAAAA,OAAR,CAGAC,QAAiB,CAACT,OAAD,CAAU,CACzB,MAAO,CACLC,OAAQF,WAAA,CAAYC,OAAZ,CADH,CADkB,CAF3BF,QAAQC,CAAAA,WAAR,CAAsBA,WAqBtBI,gBAAgBO,CAAAA,SAAhB,CAA4B,CAC1BC,YAAaR,eADa,CAE1BS,MAAOA,QAAS,CAACC,CAAD;AAAIC,CAAJ,CAAO,CACrB,IAAKb,CAAAA,MAAOW,CAAAA,KAAZ,CAAkBC,CAAlB,CAAqBC,CAArB,CADqB,CAFG,CAK1BC,OAAQA,QAAS,EAAG,CAClB,IAAKd,CAAAA,MAAOc,CAAAA,MAAZ,EADkB,CALM,CAQ1BC,UAAWA,QAAS,EAAG,CACrB,IAAKf,CAAAA,MAAOe,CAAAA,SAAZ,EADqB,CARG,CAW1BC,QAASA,QAAS,EAAG,CACnB,IAAKhB,CAAAA,MAAOgB,CAAAA,OAAZ,EADmB,CAXK,CAc1BC,aAAcA,QAAS,EAAG,CACxB,IAAKjB,CAAAA,MAAOiB,CAAAA,YAAZ,EADwB,CAdA,CAiB1BC,WAAYA,QAAS,EAAG,CACtB,IAAKlB,CAAAA,MAAOkB,CAAAA,UAAZ,EADsB,CAjBE,CA5ByE;\",\n\"sources\":[\"node_modules/d3-geo/src/transform.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_geo$src$transform\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = _default;\\nexports.transformer = transformer;\\n\\nfunction _default(methods) {\\n  return {\\n    stream: transformer(methods)\\n  };\\n}\\n\\nfunction transformer(methods) {\\n  return function (stream) {\\n    var s = new TransformStream();\\n\\n    for (var key in methods) s[key] = methods[key];\\n\\n    s.stream = stream;\\n    return s;\\n  };\\n}\\n\\nfunction TransformStream() {}\\n\\nTransformStream.prototype = {\\n  constructor: TransformStream,\\n  point: function (x, y) {\\n    this.stream.point(x, y);\\n  },\\n  sphere: function () {\\n    this.stream.sphere();\\n  },\\n  lineStart: function () {\\n    this.stream.lineStart();\\n  },\\n  lineEnd: function () {\\n    this.stream.lineEnd();\\n  },\\n  polygonStart: function () {\\n    this.stream.polygonStart();\\n  },\\n  polygonEnd: function () {\\n    this.stream.polygonEnd();\\n  }\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"transformer\",\"methods\",\"stream\",\"s\",\"TransformStream\",\"key\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_default\",\"prototype\",\"constructor\",\"point\",\"x\",\"y\",\"sphere\",\"lineStart\",\"lineEnd\",\"polygonStart\",\"polygonEnd\"]\n}\n"]