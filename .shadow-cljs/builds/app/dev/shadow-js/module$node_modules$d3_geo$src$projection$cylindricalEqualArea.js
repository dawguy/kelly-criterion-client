["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-geo/src/projection/cylindricalEqualArea.js"],"~:js","shadow$provide.module$node_modules$d3_geo$src$projection$cylindricalEqualArea=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.cylindricalEqualAreaRaw=function(phi0){function forward(lambda,phi){return[lambda*cosPhi0,(0,_math.sin)(phi)/cosPhi0]}var cosPhi0=(0,_math.cos)(phi0);forward.invert=function(x,y){return[x/cosPhi0,(0,_math.asin)(y*cosPhi0)]};return forward};var _math=require(\"module$node_modules$d3_geo$src$math\")}","~:source","shadow$provide[\"module$node_modules$d3_geo$src$projection$cylindricalEqualArea\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;\n\nvar _math = require(\"../math.js\");\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = (0, _math.cos)(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];\n  };\n\n  return forward;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$d3_geo$src$math","~$shadow.js"]],"~:properties",["^5",["invert","__esModule","value","cylindricalEqualAreaRaw"]],"~:compiled-at",1653857611319,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_geo$src$projection$cylindricalEqualArea.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,uBAAR,CAIAA,QAAgC,CAACC,IAAD,CAAO,CAGrCC,QAASA,QAAO,CAACC,MAAD,CAASC,GAAT,CAAc,CAC5B,MAAO,CAACD,MAAD,CAAUE,OAAV,CAAmB,GAAIC,KAAMC,CAAAA,GAAV,EAAeH,GAAf,CAAnB,CAAyCC,OAAzC,CADqB,CAF9B,IAAIA,QAAU,GAAIC,KAAME,CAAAA,GAAV,EAAeP,IAAf,CAMdC,QAAQO,CAAAA,MAAR,CAAiBC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC/B,MAAO,CAACD,CAAD,CAAKN,OAAL,CAAc,GAAIC,KAAMO,CAAAA,IAAV,EAAgBD,CAAhB,CAAoBP,OAApB,CAAd,CADwB,CAIjC,OAAOH,QAX8B,CAFvC,KAAII,MAAQZ,OAAA,CAAQ,qCAAR,CAR+G;\",\n\"sources\":[\"node_modules/d3-geo/src/projection/cylindricalEqualArea.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_geo$src$projection$cylindricalEqualArea\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;\\n\\nvar _math = require(\\\"../math.js\\\");\\n\\nfunction cylindricalEqualAreaRaw(phi0) {\\n  var cosPhi0 = (0, _math.cos)(phi0);\\n\\n  function forward(lambda, phi) {\\n    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];\\n  }\\n\\n  forward.invert = function (x, y) {\\n    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];\\n  };\\n\\n  return forward;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"cylindricalEqualAreaRaw\",\"phi0\",\"forward\",\"lambda\",\"phi\",\"cosPhi0\",\"_math\",\"sin\",\"cos\",\"invert\",\"forward.invert\",\"x\",\"y\",\"asin\"]\n}\n"]