["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-hierarchy/src/treemap/binary.js"],"~:js","shadow$provide.module$node_modules$d3_hierarchy$src$treemap$binary=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(parent,x0$jscomp$0,y0$jscomp$0,x1$jscomp$0,y1$jscomp$0){function partition(i,j,value,x0,y0,x1,y1){if(i>=j-1)i=nodes[i],i.x0=x0,i.y0=y0,i.x1=x1,i.y1=y1;else{for(var valueOffset=sums[i],valueTarget=value/2+valueOffset,k=i+1,hi=j-1;k<hi;){var mid=k+hi>>>1;sums[mid]<valueTarget?k=mid+1:hi=mid}valueTarget-sums[k-1]<sums[k]-\nvalueTarget&&i+1<k&&--k;valueOffset=sums[k]-valueOffset;valueTarget=value-valueOffset;x1-x0>y1-y0?(value=value?(x0*valueTarget+x1*valueOffset)/value:x1,partition(i,k,valueOffset,x0,y0,value,y1),partition(k,j,valueTarget,value,y0,x1,y1)):(value=value?(y0*valueTarget+y1*valueOffset)/value:y1,partition(i,k,valueOffset,x0,y0,x1,value),partition(k,j,valueTarget,x0,value,x1,y1))}}var nodes=parent.children,i$jscomp$0,n=nodes.length,sum,sums=Array(n+1);for(sums[0]=sum=i$jscomp$0=0;i$jscomp$0<n;++i$jscomp$0)sums[i$jscomp$0+\n1]=sum+=nodes[i$jscomp$0].value;partition(0,n,parent.value,x0$jscomp$0,y0$jscomp$0,x1$jscomp$0,y1$jscomp$0)}}","~:source","shadow$provide[\"module$node_modules$d3_hierarchy$src$treemap$binary\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i,\n      n = nodes.length,\n      sum,\n      sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = value / 2 + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;\n    }\n\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if (x1 - x0 > y1 - y0) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["y1","x1","y0","__esModule","x0","value","default"]],"~:compiled-at",1653857611343,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_hierarchy$src$treemap$binary.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/d3-hierarchy/src/treemap/binary.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_hierarchy$src$treemap$binary\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = _default;\\n\\nfunction _default(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      i,\\n      n = nodes.length,\\n      sum,\\n      sums = new Array(n + 1);\\n\\n  for (sums[0] = sum = i = 0; i < n; ++i) {\\n    sums[i + 1] = sum += nodes[i].value;\\n  }\\n\\n  partition(0, n, parent.value, x0, y0, x1, y1);\\n\\n  function partition(i, j, value, x0, y0, x1, y1) {\\n    if (i >= j - 1) {\\n      var node = nodes[i];\\n      node.x0 = x0, node.y0 = y0;\\n      node.x1 = x1, node.y1 = y1;\\n      return;\\n    }\\n\\n    var valueOffset = sums[i],\\n        valueTarget = value / 2 + valueOffset,\\n        k = i + 1,\\n        hi = j - 1;\\n\\n    while (k < hi) {\\n      var mid = k + hi >>> 1;\\n      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;\\n    }\\n\\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;\\n    var valueLeft = sums[k] - valueOffset,\\n        valueRight = value - valueLeft;\\n\\n    if (x1 - x0 > y1 - y0) {\\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\\n      partition(i, k, valueLeft, x0, y0, xk, y1);\\n      partition(k, j, valueRight, xk, y0, x1, y1);\\n    } else {\\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\\n      partition(i, k, valueLeft, x0, y0, x1, yk);\\n      partition(k, j, valueRight, x0, yk, x1, y1);\\n    }\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_default\",\"parent\",\"x0\",\"y0\",\"x1\",\"y1\",\"partition\",\"i\",\"j\",\"node\",\"nodes\",\"valueOffset\",\"sums\",\"valueTarget\",\"k\",\"hi\",\"mid\",\"valueLeft\",\"valueRight\",\"xk\",\"yk\",\"children\",\"n\",\"length\",\"sum\",\"Array\"]\n}\n"]