["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-scale/src/symlog.js"],"~:js","shadow$provide.module$node_modules$d3_scale$src$symlog=function(global,require,module,exports){function transformSymlog(c){return function(x){return Math.sign(x)*Math.log1p(Math.abs(x/c))}}function transformSymexp(c){return function(x){return Math.sign(x)*Math.expm1(Math.abs(x))*c}}function symlogish(transform){var c=1,scale=transform(transformSymlog(c),transformSymexp(c));scale.constant=function(_){return arguments.length?transform(transformSymlog(c=+_),transformSymexp(c)):c};return(0,_linear.linearish)(scale)}\nfunction symlog(){var scale=symlogish((0,_continuous.transformer)());scale.copy=function(){return(0,_continuous.copy)(scale,symlog()).constant(scale.constant())};return _init.initRange.apply(scale,arguments)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.symlogish=symlogish;exports.default=symlog;var _linear=require(\"module$node_modules$d3_scale$src$linear\"),_continuous=require(\"module$node_modules$d3_scale$src$continuous\"),_init=require(\"module$node_modules$d3_scale$src$init\")}","~:source","shadow$provide[\"module$node_modules$d3_scale$src$symlog\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.symlogish = symlogish;\nexports.default = symlog;\n\nvar _linear = require(\"./linear.js\");\n\nvar _continuous = require(\"./continuous.js\");\n\nvar _init = require(\"./init.js\");\n\nfunction transformSymlog(c) {\n  return function (x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function (x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1,\n      scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function (_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return (0, _linear.linearish)(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish((0, _continuous.transformer)());\n\n  scale.copy = function () {\n    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());\n  };\n\n  return _init.initRange.apply(scale, arguments);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$d3_scale$src$linear","~$module$node_modules$d3_scale$src$init","~$module$node_modules$d3_scale$src$continuous"]],"~:properties",["^5",["copy","constant","__esModule","symlogish","value","default"]],"~:compiled-at",1653857611359,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_scale$src$symlog.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAepGC,QAASA,gBAAe,CAACC,CAAD,CAAI,CAC1B,MAAO,SAAS,CAACC,CAAD,CAAI,CAClB,MAAOC,KAAKC,CAAAA,IAAL,CAAUF,CAAV,CAAP,CAAsBC,IAAKE,CAAAA,KAAL,CAAWF,IAAKG,CAAAA,GAAL,CAASJ,CAAT,CAAaD,CAAb,CAAX,CADJ,CADM,CAM5BM,QAASA,gBAAe,CAACN,CAAD,CAAI,CAC1B,MAAO,SAAS,CAACC,CAAD,CAAI,CAClB,MAAOC,KAAKC,CAAAA,IAAL,CAAUF,CAAV,CAAP,CAAsBC,IAAKK,CAAAA,KAAL,CAAWL,IAAKG,CAAAA,GAAL,CAASJ,CAAT,CAAX,CAAtB,CAAgDD,CAD9B,CADM,CAM5BQ,QAASA,UAAS,CAACC,SAAD,CAAY,CAAA,IACxBT,EAAI,CADoB,CAExBU,MAAQD,SAAA,CAAUV,eAAA,CAAgBC,CAAhB,CAAV,CAA8BM,eAAA,CAAgBN,CAAhB,CAA9B,CAEZU,MAAMC,CAAAA,QAAN,CAAiBC,QAAS,CAACC,CAAD,CAAI,CAC5B,MAAOC,UAAUC,CAAAA,MAAV,CAAmBN,SAAA,CAAUV,eAAA,CAAgBC,CAAhB,CAAoB,CAACa,CAArB,CAAV,CAAmCP,eAAA,CAAgBN,CAAhB,CAAnC,CAAnB,CAA4EA,CADvD,CAI9B,OAAO,GAAIgB,OAAQC,CAAAA,SAAZ,EAAuBP,KAAvB,CARqB;AAW9BQ,QAASA,OAAM,EAAG,CAChB,IAAIR,MAAQF,SAAA,CAAU,GAAIW,WAAYC,CAAAA,WAAhB,GAAV,CAEZV,MAAMW,CAAAA,IAAN,CAAaC,QAAS,EAAG,CACvB,MAAO,GAAIH,WAAYE,CAAAA,IAAhB,EAAsBX,KAAtB,CAA6BQ,MAAA,EAA7B,CAAuCP,CAAAA,QAAvC,CAAgDD,KAAMC,CAAAA,QAAN,EAAhD,CADgB,CAIzB,OAAOY,MAAMC,CAAAA,SAAUC,CAAAA,KAAhB,CAAsBf,KAAtB,CAA6BI,SAA7B,CAPS,CAnClBY,MAAOC,CAAAA,cAAP,CAAsB7B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C8B,MAAO,CAAA,CADoC,CAA7C,CAGA9B,QAAQU,CAAAA,SAAR,CAAoBA,SACpBV,QAAQ+B,CAAAA,OAAR,CAAkBX,MAElB,KAAIF,QAAUpB,OAAA,CAAQ,yCAAR,CAAd,CAEIuB,YAAcvB,OAAA,CAAQ,6CAAR,CAFlB,CAII2B,MAAQ3B,OAAA,CAAQ,uCAAR,CAbwF;\",\n\"sources\":[\"node_modules/d3-scale/src/symlog.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_scale$src$symlog\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.symlogish = symlogish;\\nexports.default = symlog;\\n\\nvar _linear = require(\\\"./linear.js\\\");\\n\\nvar _continuous = require(\\\"./continuous.js\\\");\\n\\nvar _init = require(\\\"./init.js\\\");\\n\\nfunction transformSymlog(c) {\\n  return function (x) {\\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\\n  };\\n}\\n\\nfunction transformSymexp(c) {\\n  return function (x) {\\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\\n  };\\n}\\n\\nfunction symlogish(transform) {\\n  var c = 1,\\n      scale = transform(transformSymlog(c), transformSymexp(c));\\n\\n  scale.constant = function (_) {\\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\\n  };\\n\\n  return (0, _linear.linearish)(scale);\\n}\\n\\nfunction symlog() {\\n  var scale = symlogish((0, _continuous.transformer)());\\n\\n  scale.copy = function () {\\n    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());\\n  };\\n\\n  return _init.initRange.apply(scale, arguments);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"transformSymlog\",\"c\",\"x\",\"Math\",\"sign\",\"log1p\",\"abs\",\"transformSymexp\",\"expm1\",\"symlogish\",\"transform\",\"scale\",\"constant\",\"scale.constant\",\"_\",\"arguments\",\"length\",\"_linear\",\"linearish\",\"symlog\",\"_continuous\",\"transformer\",\"copy\",\"scale.copy\",\"_init\",\"initRange\",\"apply\",\"Object\",\"defineProperty\",\"value\",\"default\"]\n}\n"]