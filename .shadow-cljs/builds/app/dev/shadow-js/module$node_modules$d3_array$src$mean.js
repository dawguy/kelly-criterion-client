["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/d3-array/src/mean.js"],"~:js","shadow$provide.module$node_modules$d3_array$src$mean=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(values,valueof){let count=0,sum=0;if(void 0===valueof)for(var value$jscomp$0 of values)null!=value$jscomp$0&&(value$jscomp$0=+value$jscomp$0)>=value$jscomp$0&&(++count,sum+=value$jscomp$0);else{value$jscomp$0=-1;for(let value of values)null!=(value=valueof(value,++value$jscomp$0,values))&&(value=+value)>=value&&(++count,sum+=value)}if(count)return sum/\ncount}}","~:source","shadow$provide[\"module$node_modules$d3_array$src$mean\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mean;\n\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n\n  if (count) return sum / count;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1653857611081,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$d3_array$src$mean.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAEAC,QAAa,CAACC,MAAD,CAASC,OAAT,CAAkB,CAC7B,IAAIC,MAAQ,CAAZ,CACIC,IAAM,CAEV,IAAgBC,IAAAA,EAAhB,GAAIH,OAAJ,CACE,IAAK,IAAIJ,cAAT,GAAkBG,OAAlB,CACe,IAAb,EAAIH,cAAJ,GAAsBA,cAAtB,CAA8B,CAACA,cAA/B,GAAyCA,cAAzC,GACE,EAAEK,KAAO,CAAAC,GAAA,EAAON,cADlB,CAFJ,KAMO,CACDQ,cAAAA,CAAQ,CAAC,CAEb,KAAK,IAAIR,KAAT,GAAkBG,OAAlB,CACmD,IAAjD,GAAKH,KAAL,CAAaI,OAAA,CAAQJ,KAAR,CAAe,EAAEQ,cAAjB,CAAwBL,MAAxB,CAAb,IAA0DH,KAA1D,CAAkE,CAACA,KAAnE,GAA6EA,KAA7E,GACE,EAAEK,KAAO,CAAAC,GAAA,EAAON,KADlB,CAJG,CAUP,GAAIK,KAAJ,CAAW,MAAOC,IAAP;AAAaD,KApBK,CARmE;\",\n\"sources\":[\"node_modules/d3-array/src/mean.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$d3_array$src$mean\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = mean;\\n\\nfunction mean(values, valueof) {\\n  let count = 0;\\n  let sum = 0;\\n\\n  if (valueof === undefined) {\\n    for (let value of values) {\\n      if (value != null && (value = +value) >= value) {\\n        ++count, sum += value;\\n      }\\n    }\\n  } else {\\n    let index = -1;\\n\\n    for (let value of values) {\\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\\n        ++count, sum += value;\\n      }\\n    }\\n  }\\n\\n  if (count) return sum / count;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"mean\",\"values\",\"valueof\",\"count\",\"sum\",\"undefined\",\"index\"]\n}\n"]