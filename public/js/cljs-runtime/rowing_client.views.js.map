{"version":3,"sources":["rowing_client/views.cljs"],"mappings":"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","names":["kelly-criterion-client.views/render","comp","reagent.dom.render","js/document.getElementById","kelly-criterion-client.views/navbar","kelly-criterion-client.views/workoutListContainer","workout","cljs.core/random-uuid","cljs.core.get_in","kelly-criterion-client.graphs/workout","kelly-criterion-client.views/workoutsContainer","w","cljs.core.map","kelly-criterion-client.views/split-over-distance","kelly-criterion-client.views/splitListContainer","split","kelly-criterion-client.splits/powerToSplit","kelly-criterion-client.views/workoutContainer","splits","a","b","cljs.core.prn","js/Date","cljs.core.apply","cljs.core/+","cljs.core/count","kelly-criterion-client.splits/toTime","kelly-criterion-client.views/home","kelly-criterion-client.views/page","data","cljs.core/deref","target-id","target","target-data","G__37200","cljs.core/Keyword","p1__37175#","p1__37176#","kelly-criterion-client.views/mainPage"],"sourcesContent":["(ns kelly-criterion-client.views\n  (:require [reagent.dom :as rdom]\n            [d3 :as d3]\n            [kelly-criterion-client.graphs :as graphs]\n            [kelly-criterion-client.splits :as splits]))\n\n(defn render [comp]\n  (rdom/render comp (js/document.getElementById \"app\")))\n\n(defn navbar []\n  [:nav.bg-gray-800\n   [:div.flex-1.flex.items-center.justify-center {:class \"sm:items-stretch sm:justify-start\"}\n    [:div.flex.space-x-4\n     [:a.text-gray-300.rounded-md.px-3.py-2 {:href \"/home\"} \"Home\"]\n     [:a.text-gray-300.rounded-md.px-3.py-2 {:href \"/workouts\"} \"Workouts\"]\n     [:a.text-gray-300.rounded-md.px-3.py-2 {:href \"/calendar\"} \"Calendar\"]]]])\n\n(defn workoutListContainer [workout]\n  [:tr {:key (random-uuid)}\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b.hidden (get-in workout [:boat :name])]\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b.hidden (get-in workout [:athlete :name])]\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:date workout)]\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:power workout)]\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:duration workout)]\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b [:a {:href (str \"/workout/\" (:id workout))} (graphs/workout (:splits workout))]]\n   ])\n\n(defn workoutsContainer [w]\n  [:div.sm:px-7.w-full\n   [:div.bg-white.py-4.md:py-7.px-4.md:px-8.xl:px-10\n    [:div.relative.w-full.px-4.max-w-full.flex-grow.flex-1 [:h3.text-lg \"Workouts\"]]\n    [:div.mt-7.block.w-full.overflow-x-auto\n     [:table.w-full.whitespace-nowrap\n      [:thead [:tr\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell.hidden \"Boat\"]\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell.hidden \"Athlete\"]\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell \"Date\"]\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell \"Power\"]\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell \"Duration\"]\n               [:th.p-3.font-bold.uppercase.border.lg:table-cell \"Splits\"]]]\n      [:tbody\n       (map workoutListContainer w)\n       ]]]]])\n\n(defn split-over-distance [] true)\n\n(defn splitListContainer [split]\n  [:tr {:key (random-uuid)}\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:seq split)]\n   (cond (split-over-distance)\n         [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (splits/powerToSplit (:power split))]\n         :else [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:distance split)])\n   [:td.w-full.p-3.text-center.border.lg:table-cell.border-b (:duration split)]])\n\n(defn workoutContainer [w splits a b]\n   (prn w splits)\n  [:div.sm:px-7.w-full\n   [:h1.text-2xl \"Workout\"]\n   ;; Summation Stats\n   [:div.flex.flex-col.justify-left\n    [:div.flex.flex-row\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"} (:name b)]\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"} (.toDateString (js/Date. (:date w)))]]\n    [:div.flex.flex-row\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"} (:name a)]\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"}\n      \"Average power: \" (.toFixed (/ (apply + (map :power splits)) (count splits)) 2)\n      ]]\n    [:div.flex.flex-row\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"} \"Intervals: \" (count splits)]\n     [:div.flex.justify-left.text-lg {:class \"w-1/3\"} \"Duration: \" (splits/toTime (apply + (map :duration splits)))]]]\n   ;; Graph\n   [:div.max-w-md. (graphs/workout splits)]\n   ;; Table\n   [:div.bg-white.py-4.md:py-7.px-4.md:px-8.xl:px-10\n    [:div.mt-7.block.w-full.overflow-x-auto\n     [:table.w-full.whitespace-nowrap\n      [:thead [:tr\n               [:th.p-1.font-bold.uppercase.border.table-cell \"Sequence\"]\n               ;; TODO This should use distance for water and split for erg\n               (cond (split-over-distance)\n                     [:th.p-3.font-bold.uppercase.border.table-cell \"Split\"]\n                     :else [:th.p-3.font-bold.uppercase.border.table-cell \"Distance\"])\n               [:th.p-3.font-bold.uppercase.border.table-cell \"Duration\"]]]\n      [:tbody\n       (map splitListContainer splits)\n       ]]]]\n   ])\n\n(defn home []\n  [:div \"Welcome home!\"])\n\n\n(defn page [data]\n  (fn []\n    (prn @data)\n    (let [target-id (:targetId @data)\n          target (:target @data)\n          target-data (get-in @data [(:target @data) (:targetId @data)])]\n      (case (:target @data)\n        :ergWorkout (workoutContainer\n                      target-data\n                      (map #(get-in @data [:ergSplit %]) (:splits target-data))\n                      (get-in @data [:athlete (:athlete (get-in @data [target target-id]))])\n                      (get-in @data [:boat (:boat (get-in @data [target target-id]))]))\n        :waterWorkout (workoutContainer\n                      target-data\n                      (map #(get-in @data [:waterSplit %]) (:splits target-data))\n                      (get-in @data [:athlete (:athlete (get-in @data [target target-id]))])\n                      (get-in @data [:boat (:boat (get-in @data [target target-id]))]))\n        (home)))))\n\n(defn mainPage [data]\n  [:div.min-h-screen.bg-gray-100\n   [navbar]\n   [page data]\n   ])\n\n(comment [] \"Collection of helpful REPL snippets\"\n         (def power-profile-sample-data [{:duration 1 :power 500} {:duration 2 :power 444} {:duration 3 :power 400} {:duration 4 :power 350} {:duration 5 :power 340} {:duration 6 :power 330} {:duration 7 :power 320} {:duration 8 :power 310} {:duration 9 :power 300} {:duration 10 :power 300} {:duration 11 :power 290} {:duration 12 :power 290} {:duration 13 :power 290} {:duration 14 :power 285} {:duration 15 :power 285} {:duration 16 :power 285} {:duration 17 :power 280} {:duration 18 :power 280}])\n         (def splits-sample-data [{:duration 90 :power 250 :seq 0} {:duration 30 :power 0 :seq 1} {:duration 90 :power 250 :seq 2} {:duration 30 :power 0 :seq 3} {:duration 90 :power 250 :seq 4} {:duration 30 :power 0 :seq 5} {:duration 90 :power 250 :seq 6} {:duration 30 :power 0 :seq 7} {:duration 90 :power 250 :seq 8} {:duration 240 :power 0 :seq 9} {:duration 90 :power 250 :seq 10} {:duration 30 :power 0 :seq 11} {:duration 90 :power 250 :seq 12} {:duration 30 :power 0 :seq 13} {:duration 90 :power 250 :seq 14} {:duration 30 :power 0 :seq 15} {:duration 90 :power 250 :seq 16} {:duration 30 :power 0 :seq 17} {:duration 90 :power 250 :seq 18}])\n         (def splits-sample-data-2 [{:duration 600 :power 200 :seq 0} {:duration 600 :power 225 :seq 1} {:duration 600 :power 200 :seq 2} {:duration 600 :power 190 :seq 3} {:duration 600 :power 225 :seq 4} {:duration 600 :power 200 :seq 5}])\n         (def sample-workouts [{:id 1 :duration 40 :power 200 :athlete {:id 1 :name \"David Wright\"} :boat {:id 0 :name \"Erg\"} :date \"2022-10-05\" :splits splits-sample-data} {:id 2 :duration 500 :power 220 :athlete {:id 1 :name \"David Wright\"} :boat {:id 0 :name \"Erg\"} :date \"2022-10-05\" :splits splits-sample-data-2} {:id 3 :duration 240 :power 200 :athlete {:id 1 :name \"David Wright\"} :boat {:id 1 :name \"Beaver\"} :date \"2022-10-05\" :splits power-profile-sample-data}])\n         (def sample-workout-1 {:id 1 :duration 40 :power 200 :athlete {:id 1 :name \"David Wright\"} :boat {:id 0 :name \"Erg\"} :date \"2022-10-05\" :splits splits-sample-data})\n         (def sample-workout-2 {:id 2 :duration 500 :power 220 :athlete {:id 1 :name \"David Wright\"} :boat {:id 0 :name \"Erg\"} :date \"2022-10-05\" :splits splits-sample-data-2})\n         (def target-data {:ergWorkout 7,\n                                          :date 1645678800000,\n                                          :athlete 1,\n                                          :assignedWorkout 2,\n                                          :workout 7,\n                                          :splits [{:ergSplit 4, :seq 0, :duration 100, :distance 1000, :heartRate nil, :power nil}\n                                                   {:ergSplit 5, :seq 1, :duration 100, :distance 500, :heartRate nil, :power nil}\n                                                   {:ergSplit 6, :seq 2, :duration 100, :distance 1000, :heartRate nil, :power nil}\n                                                   {:ergSplit 7, :seq 3, :duration 100, :distance 250, :heartRate nil, :power nil}\n                                                   {:ergSplit 8, :seq 4, :duration 100, :distance 250, :heartRate nil, :power nil}\n                                                   {:ergSplit 9, :seq 6, :duration 100, :distance 1000, :heartRate nil, :power nil}\n                                                   {:ergSplit 10, :seq 7, :duration 100, :distance 1000, :heartRate nil, :power nil}\n                                                   {:ergSplit 11, :seq 8, :duration 100, :distance 1000, :heartRate nil, :power nil}],\n                                          :name \"\"})\n         )"]}